{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/careers/careers.component.css","webpack:///./src/app/careers/careers.component.html","webpack:///./src/app/careers/careers.component.ts","webpack:///./src/app/contactus/contactus.component.css","webpack:///./src/app/contactus/contactus.component.html","webpack:///./src/app/contactus/contactus.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/directives/hlight.directive.ts","webpack:///./src/app/errors/custom-errors.ts","webpack:///./src/app/errors/password-match.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/service/contacts.service.ts","webpack:///./src/app/service/login.service.ts","webpack:///./src/app/service/register.service.ts","webpack:///./src/app/singup/singup.component.css","webpack:///./src/app/singup/singup.component.html","webpack:///./src/app/singup/singup.component.ts","webpack:///./src/app/sorting/sort.pipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { ContactusComponent } from './contactus/contactus.component';\nimport { LoginComponent } from './login/login.component';\nimport { SingupComponent } from './singup/singup.component';\nimport { CareersComponent } from './careers/careers.component';\nimport { DashboardComponent } from './dashboard/dashboard.component'\n//const routes: Routes = [];\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'careers/:id', component: CareersComponent },\n  { path: 'contactus', component: ContactusComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signin', component: SingupComponent },\n  { path: 'dash', component: DashboardComponent },\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<nav class=\\\"navbar  bg-light navbar-fixed-top\\\">\\n  <ul class=\\\"nav\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"router-link active my-5 my-sm-0 mr-sm-2\\\" href=\\\"/home\\\">Home</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a [routerLink]=\\\"['/careers',1234]\\\" class=\\\"my-5 my-sm-0 mr-sm-2\\\" >Careers</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"router-link my-5 my-sm-0 mr-sm-2\\\" href=\\\"/contactus\\\">Contact Us</a>\\n          </li>\\n\\n  </ul> \\n  <form class=\\\"form-inline \\\">\\n      <!-- <button class=\\\"btn btn-primary  my-2 my-sm-0 mr-sm-2 \\\" type=\\\"submit\\\">LogIn</button> -->\\n      <a routerLink=\\\"/login\\\" class=\\\"btn btn-link\\\">Login</a>\\n      <!-- <button class=\\\"btn btn-primary my-2 my-sm-0 mr-sm-2\\\" type=\\\"submit\\\">SignIn</button> -->\\n      <a routerLink=\\\"/signin\\\" class=\\\"btn btn-link\\\">SignIn</a>\\n      <input class=\\\"form-control mr-sm-2 \\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n      <button class=\\\"btn btn-primary my-2 my-sm-0 \\\" type=\\\"submit\\\">Search</button>\\n\\n  </form>\\n  </nav>\\n  <br/>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'FirstAngularProject';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common//http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ContactusComponent } from './contactus/contactus.component';\nimport { LoginComponent } from './login/login.component';\nimport { SingupComponent } from './singup/singup.component';\nimport { CareersComponent } from './careers/careers.component';\nimport {ContactsService } from './service/contacts.service';\nimport { NgBootstrapFormValidationModule, CUSTOM_ERROR_MESSAGES } from 'ng-bootstrap-form-validation';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport {CUSTOM_ERRORS} from './errors/custom-errors';\nimport { HlightDirective } from './directives/hlight.directive';\nimport { SortPipe } from './sorting/sort.pipe';\nimport {RegisterService} from './service/register.service';\nimport { DashboardComponent } from './dashboard/dashboard.component'\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ContactusComponent,\n    LoginComponent,\n    SingupComponent,\n    CareersComponent,\n    HlightDirective,\n    SortPipe,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgBootstrapFormValidationModule.forRoot(),\n    NgBootstrapFormValidationModule\n  ],\n  providers: [ContactsService,RegisterService,\n    {\n    provide: CUSTOM_ERROR_MESSAGES,\n    useValue: CUSTOM_ERRORS,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcmVlcnMvY2FyZWVycy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"{{name}}<br/>\\n{{name | uppercase}}<br/>\\n{{name| lowercase}}<br/>\\n{{day}}<br/>\\n{{day | date}} <br/>\\n{{day | date: 'shortDate'}}<br/>\\n{{day | date: 'fullDate'}}<br/>\\n{{day | date: 'fullDate' | uppercase}} <br/>\\n{{ arr | sort : 'ascending'}} <br/>\\n{{ arr | sort : 'descending' }}<br/>\\nParameter passed : {{ id}}\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\n@Component({\n  selector: 'app-careers',\n  templateUrl: './careers.component.html',\n  styleUrls: ['./careers.component.css']\n})\nexport class CareersComponent implements OnInit {\n\n  name=\"Welcome to Angular Project Tour\";\n  day = new Date(1992,3,15);\n  arr=[3,7,8,2,1];\n  id=null;\n  constructor(private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.paramMap\n    .subscribe(params=>{\n       this.id= +params.get('id');\n      console.log(this.id);\n    })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhY3R1cy9jb250YWN0dXMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<table class=\\\"table-bordered\\\">\\n  <tr><th>Contact Us at following addresses</th></tr>\\n  <tr *ngFor=\\\"let contact of contacts\\\">\\n    <td>\\n     Name    :  {{contact.name}}<br/>\\n     Address :  {{contact.address}}<br/>\\n     Phone   :  {{contact.phone}}<br/>\\n     Email   :  {{contact.email}}\\n    </td>\\n  \\n  </tr>\\n  \\n  </table>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { CONTACTS  } from '../model/model-contact';\nimport { ContactsService } from '../service/contacts.service';\nimport { Contacts } from '../model/contacts';\n@Component({\n  selector: 'app-contactus',\n  templateUrl: './contactus.component.html',\n  styleUrls: ['./contactus.component.css']\n\n})\nexport class ContactusComponent implements OnInit {\n  public contacts: Contacts[] = [];\n  isLoading = false;\n constructor(private _contactService: ContactsService) {}\n\n   /* getContacts(): void {\n     this._contactService.getContacts().then( contacts => this.contacts = contacts);\n      }*/\n ngOnInit(): any {\n  this.isLoading=true;\n  this._contactService.getContacts()\n  .subscribe((data:Contacts[]) => {\n    this.contacts = data;\n  })\n}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"You have successfully logged in using JWT <br/> <br/>\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"logout()\\\">Logout</button>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(  private _router: Router, private _activatedRoute: ActivatedRoute) { }\n\n ngOnInit() {\n  }\n \nlogout() {\n//delete the token and route to login page\nlocalStorage.removeItem('token');\nthis._router.navigate(['/login']);\n}\n}\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appHlight]'\n})\nexport class HlightDirective {\n\n  constructor(el: ElementRef) {\n    el.nativeElement.style.backgroundColor = 'yellow';\n }\n}\n","import {ErrorMessage} from 'ng-bootstrap-form-validation';\r\n\r\nexport const CUSTOM_ERRORS: ErrorMessage[] = [\r\n  {\r\n    error: 'required',\r\n    format: requiredFormat\r\n  }, {\r\n    error: 'email',\r\n    format: emailFormat\r\n  }, {\r\n    error: 'passwordValidator',\r\n    format: passwordConfirmPasswordFarmatEqual\r\n  }\r\n];\r\n\r\nexport function requiredFormat(label: string, error: any): string {\r\n  return `${label} IS MOST DEFINITELY REQUIRED!`;\r\n}\r\n\r\nexport function emailFormat(label: string, error: any): string {\r\n  return `${label} doesn't look like a valid email address.`;\r\n}\r\nexport function passwordConfirmPasswordFarmatEqual(label: string, error: any): string {\r\n  return `${label} confirm password do not match.`;\r\n}","import {AbstractControl} from '@angular/forms';\r\nexport function passwordValidator(control: AbstractControl) {\r\n  if (control && (control.value !== null || control.value !== undefined)){\r\n    const confirmPasswordValue = control.value;\r\n    const passControl = control.root.get('Password');\r\n    if (passControl) {\r\n      const passValue = passControl.value;\r\n      if (passValue !== confirmPasswordValue) {\r\n         return {\r\n           isError: true\r\n        };\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<br/>\\n<br/>\\n<div class=\\\"container bg-light\\\">\\n Welcome to the MEAN Stack Project\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <br/><br/>\\n  <h1 class=\\\"text-center bg-light\\\">LogIn </h1>\\n  <br/><br/>\\n  <div class=\\\"row bg-light\\\">\\n      <div class=\\\"col-md-6 col-md-offset-3\\\">\\n        <form class=\\\"form-horizontal\\\" #loginForm=\\\"ngForm\\\" [formGroup]=\\\"formGroup\\\" (validSubmit)=\\\"onSubmit(loginForm)\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label col-sm-2\\\">Email</label>\\n            <div class=\\\"col-sm-10\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"Username\\\">\\n\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label col-sm-2\\\">Password</label>\\n            <div class=\\\"col-sm-10\\\">\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"Password\\\">\\n\\n            </div>\\n          </div>\\n          <button class=\\\"btn btn-default my-5 my-sm-0 mr-sm-2\\\" type=\\\"button\\\" (click)=\\\"onReset()\\\">Reset</button>\\n          <button class=\\\"btn btn-primary my-5 my-sm-0 mr-sm-2 \\\" type=\\\"submit\\\">Submit</button>\\n          <button class=\\\"btn btn-info my-5 my-sm-0 mr-sm-2\\\" (click)=\\\"moveToRegister()\\\">Register</button>\\n        </form>\\n      </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute,Router} from '@angular/router';\nimport { LoginService } from '../service/login.service';\nimport { NgForm } from '@angular/forms';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private _loginService: LoginService,  private _router: Router, private _activatedRoute: ActivatedRoute) { }\n\n  formGroup: FormGroup;\n  isFormValid: boolean =true;\n  message : string;\n  sto = false;\n  ngOnInit() {\n    this.formGroup = new FormGroup({\n      Username: new FormControl('', [\n        Validators.required,\n       // Validators.pattern(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)\n      ]),\n      Password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(20)\n      ])\n    });\n  }\n\n  onSubmit(form: NgForm) {\n    console.log(this.formGroup);\n    this.isFormValid = true;\n\n    if (this.isFormValid) {\n    const user = {\n      username: this.formGroup.get('Username').value, // Username input field\n      password: this.formGroup.get('Password').value // Password input field\n    };\n    console.log('Form valid');\n    console.log(user.username + '  ' + user.password );\n    console.log('Formgroup value :' + this.formGroup.value);\n    //this._loginService.login(this.formGroup.value).subscribe(data => {\n             this._loginService.login(user).subscribe(data => {\n             localStorage.setItem('token', data.toString());\n            console.log(' Storage : ' + localStorage.getItem('token'));\n           // this.sto = true;\n            this._router.navigate(['/dash']);\n          },\n          error => { console.log('Error ');\n           //this._router.navigate(['/errs']);\n           }\n        );\n        }\n      //  if (this.sto === true) {\n      //   this._router.navigate(['/dash']);\n      //  }\n    }\n\n  onReset() {\n    this.formGroup.reset();\n  }\n  isValid(controlName) {\n    return this.formGroup.get(controlName).invalid && this.formGroup.get(controlName).touched;\n   }\n  moveToRegister() {\n    this._router.navigate(['../signin'], { relativeTo: this._activatedRoute});\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { CONTACTS } from '../model/model-contact';\nimport { Contacts } from '../model/contacts';\nimport { HttpClient } from '@angular/common//http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactsService {\n  uri = 'http://localhost:3000/api/posts';\n  \n  constructor(private http: HttpClient, private router: Router) {}\n  getContacts() {\n    return this.http.get(`${this.uri}`);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private _http: HttpClient) { }\n  \n  \n  login(body: any) {\n    return this._http.post('http://localhost:3000/api/login', body, {\n      observe: 'body'\n    });\n  }\n\n  getUserName() {\n    return this._http.get('http://localhost:3000/api/username', {\n      observe: 'body',\n      params: new HttpParams().append('token', localStorage.getItem('token'))\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common//http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n  uri = 'http://localhost:3000/api';\n    constructor(private http: HttpClient) { }\n    //addUser(first_Name, last_Name, e_mail,pass_word,confirm_Password) {\n      addUser(fname, lname, emal, pwd, cpwd) {\n      const obj = {\n        firstName: fname,\n        lastName: lname,\n        email: emal,\n        password: pwd,\n        confirmPassword: cpwd\n      };\n      console.log(obj);\n      this.http.post(`${this.uri}/add`, obj)\n          .subscribe(res => console.log('Done'));\n    }\n  }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Npbmd1cC9zaW5ndXAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <br/><br/>\\n  <h1 class=\\\"text-center text-primary bg-light\\\">SignUp </h1>\\n  <br/><br/>\\n  <div class=\\\"row bg-light\\\">\\n      <div class=\\\"col-md-6 col-md-offset-3\\\">\\n        <form class=\\\"form-horizontal\\\" #postform=\\\"ngForm\\\" [formGroup]=\\\"formGroup\\\" (validSubmit)=\\\"onSubmit(postform)\\\">\\n\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2\\\">FirstName</label>\\n                <div class=\\\"col-sm-10\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"FirstName\\\">\\n\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label col-sm-2\\\">LastName</label>\\n                  <div class=\\\"col-sm-10\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"LastName\\\">\\n\\n                  </div>\\n                </div>\\n\\n          <div class=\\\"form-group\\\" [customErrorMessages]=\\\"customErrorMessages\\\">\\n            <label class=\\\"control-label col-sm-2\\\">Email</label>\\n            <div class=\\\"col-sm-10\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"Email\\\">\\n\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label col-sm-2\\\">Password</label>\\n            <div class=\\\"col-sm-10\\\">\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"Password\\\">\\n\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label col-sm-2\\\">ConfirmPassword</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"password\\\"  class=\\\"form-control\\\" formControlName=\\\"ConfirmPassword\\\">\\n\\n              </div>\\n            </div>\\n\\n          <button class=\\\"btn btn-default my-5 my-sm-0 mr-sm-2\\\" type=\\\"button\\\" (click)=\\\"onReset()\\\">Reset</button>\\n          <button class=\\\"btn btn-primary my-5 my-sm-0 mr-sm-2 \\\" type=\\\"submit\\\">Submit</button>\\n          <button class=\\\"btn btn-info my-5 my-sm-0 mr-sm-2\\\" (click)=\\\"moveToLogin()\\\">Login</button>\\n        </form>\\n      </div>\\n    </div>\\n</div>\\n\\n\\n<div  *ngIf=\\\"isValid\\\">\\n  <h5 appHlight class=\\\"text-center text-primary\\\">Registration Successfull</h5>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport {ErrorMessage} from 'ng-bootstrap-form-validation';\nimport {passwordValidator} from '../errors/password-match';\nimport { NgForm } from '@angular/forms';\nimport { Register } from '../model/register';\nimport { RegisterService } from '../service/register.service';\nimport {ActivatedRoute,Router} from '@angular/router';\n@Component({\n  selector: 'app-singup',\n  templateUrl: './singup.component.html',\n  styleUrls: ['./singup.component.css']\n})\nexport class SingupComponent implements OnInit {\n  formGroup: FormGroup;\n  isValid: boolean = true;\n  posts: Array<Register>;\n  constructor(private _registerService: RegisterService,private _router: Router, private _activatedRoute: ActivatedRoute){}\n  customErrorMessages: ErrorMessage[] = [\n    {\n      error: 'required',\n      format: (label, error) => `${label.toUpperCase()} IS DEFINITELY REQUIRED!`\n    }, {\n      error: 'pattern',\n      format: (label, error) => `${label.toUpperCase()} DOESN'T LOOK RIGHT...`\n    }, {\n      error: 'passwordValidator',\n      format: (label, error) => `${label.toUpperCase()} does not match`\n    }\n  ];\n  ngOnInit() {\n    this.formGroup = new FormGroup({\n      FirstName : new FormControl('', [\n        Validators.required\n      ]),\n      LastName: new FormControl('', [\n        Validators.required,\n      ]),\n      Email: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)\n      ]),\n      Password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(20),\n        passwordValidator\n      ]),\n      ConfirmPassword: new FormControl('', [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(20),\n        passwordValidator\n      ]),\n    });\n    this.isValid = false;\n  }\n\n  onSubmit(form: NgForm) {\n    console.log(this.formGroup);\n    this.isValid = true;\nif (this.isValid) {\n     this._registerService.addUser(this.formGroup.controls.FirstName.value,\n      this.formGroup.controls.LastName.value, this.formGroup.controls.Email.value, this.formGroup.controls.Password.value,\n      this.formGroup.controls.ConfirmPassword.value);\n    }\n  }\n\n  onReset() {\n    this.formGroup.reset();\n  }\n\n  moveToLogin() {\n    this._router.navigate(['../login'], { relativeTo: this._activatedRoute});\n   }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform {\n\n  // transform(value: any, args?: any): any {\n  //   return null;\n  // }\n  transform(value: any[], args: string): any   {\n    if ( args === 'ascending')  {\n      return value.sort();\n    }   else {  if ( args === 'descending') {\n    return value.sort().reverse();\n    }\n    }\n    }\n  }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}